pipeline {
    agent any

    environment {
        ENVIRONMENT = 'dev'
        DOCKER_IMAGE = 'your-docker-image:latest'
        DOCKER_HUB_CREDENTIAL = 'thuchongtrinh' // Jenkins credential ID
        DOCKER_REPO = 'testing-jenkins'
        TAG = 'latest'
        IMAGE_NAME = 'testing-jenkins'
    }

    stages {
        stage('Clone Code from GitHub') {
            steps {
                echo "Cloning the code from GitHub"
                git url: "https://github.com/trinhhongthuc/build-reactjs-jenkin", branch: "master"
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building the Docker Image"
                sh "docker build -t ${IMAGE_NAME}:${TAG} ."
            }
        }

        stage('Push to Docker Hub') {
            steps {
                echo "Pushing the Docker image to Docker Hub"
                withCredentials([usernamePassword(credentialsId: "${DOCKER_HUB_CREDENTIAL}", passwordVariable: 'DOCKERHUB_PASSWORD', usernameVariable: 'DOCKERHUB_USERNAME')]) {
                    echo "-====docker tag ${IMAGE_NAME}:${TAG} ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${TAG}"
                    sh "docker tag ${IMAGE_NAME}:${TAG} ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${TAG}"
                    echo "echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin"
                    sh "echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin"
                    sh "docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${TAG}"
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying the container"
                sh "docker compose down && docker compose up -d"
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}